{"ast":null,"code":"var _jsxFileName = \"/Users/rahultiwari/Desktop/cutShort/src/views/Components/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport UserComponentRoutes from \"views/Routing/ComponentRoutes\";\nimport \"react-notifications/lib/notifications.css\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Index = _ref => {\n  _s();\n\n  let {\n    alerts,\n    ...props\n  } = _ref;\n\n  const createNotification = (type, message) => {\n    switch (type) {\n      case \"info\":\n        return NotificationManager.info(message, \"\", 500);\n\n      case \"success\":\n        return NotificationManager.success(message, \"\", 500);\n\n      case \"warning\":\n        return NotificationManager.warning(message, \"\", 500);\n\n      case \"danger\":\n        return NotificationManager.error(message, \"\", 500);\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    alerts !== null && alerts.length > 0 && alerts.map((alert, idx) => {\n      createNotification(`${alert.alertType}`, alert.msg);\n      return true;\n    });\n  }, [alerts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: UserComponentRoutes.map((route, idx) => {\n        return route.component ? /*#__PURE__*/_jsxDEV(Route, {\n          path: route.path,\n          exact: route.exact,\n          name: route.name,\n          component: route.component\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this) : null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Index, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Index;\nIndex.prototype = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(withRouter(Index));\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/rahultiwari/Desktop/cutShort/src/views/Components/index.js"],"names":["React","useEffect","PropTypes","connect","Route","Switch","withRouter","UserComponentRoutes","NotificationContainer","NotificationManager","Index","alerts","props","createNotification","type","message","info","success","warning","error","length","map","alert","idx","alertType","msg","route","component","path","exact","name","prototype","array","isRequired","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAuBC,UAAvB,QAAyC,kBAAzC;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AAEA,OAAO,2CAAP;AACA,SACEC,qBADF,EAEEC,mBAFF,QAGO,qBAHP;;;;AAKA,MAAMC,KAAK,GAAG,QAA0B;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,MAAF;AAAU,OAAGC;AAAb,GAAyB;;AAEtC,QAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC5C,YAAQD,IAAR;AACE,WAAK,MAAL;AACE,eAAOL,mBAAmB,CAACO,IAApB,CAAyBD,OAAzB,EAAkC,EAAlC,EAAsC,GAAtC,CAAP;;AACF,WAAK,SAAL;AACE,eAAON,mBAAmB,CAACQ,OAApB,CAA4BF,OAA5B,EAAqC,EAArC,EAAyC,GAAzC,CAAP;;AACF,WAAK,SAAL;AACE,eAAON,mBAAmB,CAACS,OAApB,CAA4BH,OAA5B,EAAqC,EAArC,EAAyC,GAAzC,CAAP;;AACF,WAAK,QAAL;AACE,eAAON,mBAAmB,CAACU,KAApB,CAA0BJ,OAA1B,EAAmC,EAAnC,EAAuC,GAAvC,CAAP;;AACF;AACE;AAVJ;AAYD,GAbD;;AAeAd,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM,KAAK,IAAX,IACEA,MAAM,CAACS,MAAP,GAAgB,CADlB,IAEET,MAAM,CAACU,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzBV,MAAAA,kBAAkB,CAAE,GAAES,KAAK,CAACE,SAAU,EAApB,EAAuBF,KAAK,CAACG,GAA7B,CAAlB;AACA,aAAO,IAAP;AACD,KAHD,CAFF;AAMD,GAPQ,EAON,CAACd,MAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACI,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA,gBACGJ,mBAAmB,CAACc,GAApB,CAAwB,CAACK,KAAD,EAAQH,GAAR,KAAgB;AACvC,eAAOG,KAAK,CAACC,SAAN,gBACL,QAAC,KAAD;AAEE,UAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,UAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,UAAA,IAAI,EAAEH,KAAK,CAACI,IAJd;AAKE,UAAA,SAAS,EAAEJ,KAAK,CAACC;AALnB,WACOJ,GADP;AAAA;AAAA;AAAA;AAAA,gBADK,GAQH,IARJ;AASD,OAVA;AADH;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADF;AAkBD,CA5CD;;GAAMb,K;;KAAAA,K;AA8CNA,KAAK,CAACqB,SAAN,GAAkB;AAChBpB,EAAAA,MAAM,EAAET,SAAS,CAAC8B,KAAV,CAAgBC;AADR,CAAlB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCxB,EAAAA,MAAM,EAAEwB,KAAK,CAACb;AADoB,CAAZ,CAAxB;;AAIA,eAAenB,OAAO,CAAC+B,eAAD,CAAP,CAAyB5B,UAAU,CAACI,KAAD,CAAnC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch,withRouter } from \"react-router-dom\";\nimport UserComponentRoutes from \"views/Routing/ComponentRoutes\";\n\nimport \"react-notifications/lib/notifications.css\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nconst Index = ({ alerts, ...props }) => {\n\n  const createNotification = (type, message) => {\n    switch (type) {\n      case \"info\":\n        return NotificationManager.info(message, \"\", 500);\n      case \"success\":\n        return NotificationManager.success(message, \"\", 500);\n      case \"warning\":\n        return NotificationManager.warning(message, \"\", 500);\n      case \"danger\":\n        return NotificationManager.error(message, \"\", 500);\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    alerts !== null &&\n      alerts.length > 0 &&\n      alerts.map((alert, idx) => {\n        createNotification(`${alert.alertType}`, alert.msg);\n        return true;\n      });\n  }, [alerts]);\n  \n  return (\n    <>\n        <NotificationContainer />\n        <Switch>\n          {UserComponentRoutes.map((route, idx) => {\n            return route.component ? (\n              <Route\n                key={idx}\n                path={route.path}\n                exact={route.exact}\n                name={route.name}\n                component={route.component}\n              />\n            ) : null;\n          })}\n        </Switch>\n    </>\n  );\n};\n\nIndex.prototype = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(withRouter(Index));\n"]},"metadata":{},"sourceType":"module"}