{"ast":null,"code":"var global = require('../internals/global');\n\nvar fails = require('../internals/fails');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = require('../internals/to-string');\n\nvar trim = require('../internals/string-trim').trim;\n\nvar whitespaces = require('../internals/whitespaces');\n\nvar charAt = uncurryThis(''.charAt);\nvar n$ParseFloat = global.parseFloat;\nvar Symbol = global.Symbol;\nvar ITERATOR = Symbol && Symbol.iterator;\nvar FORCED = 1 / n$ParseFloat(whitespaces + '-0') !== -Infinity // MS Edge 18- broken with boxed symbols\n|| ITERATOR && !fails(function () {\n  n$ParseFloat(Object(ITERATOR));\n}); // `parseFloat` method\n// https://tc39.es/ecma262/#sec-parsefloat-string\n\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(toString(string));\n  var result = n$ParseFloat(trimmedString);\n  return result === 0 && charAt(trimmedString, 0) == '-' ? -0 : result;\n} : n$ParseFloat;","map":{"version":3,"sources":["/Users/rahultiwari/Desktop/cutShort/node_modules/core-js/internals/number-parse-float.js"],"names":["global","require","fails","uncurryThis","toString","trim","whitespaces","charAt","n$ParseFloat","parseFloat","Symbol","ITERATOR","iterator","FORCED","Infinity","Object","module","exports","string","trimmedString","result"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,oBAAD,CAAnB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,0BAAD,CAAP,CAAoCI,IAA/C;;AACA,IAAIC,WAAW,GAAGL,OAAO,CAAC,0BAAD,CAAzB;;AAEA,IAAIM,MAAM,GAAGJ,WAAW,CAAC,GAAGI,MAAJ,CAAxB;AACA,IAAIC,YAAY,GAAGR,MAAM,CAACS,UAA1B;AACA,IAAIC,MAAM,GAAGV,MAAM,CAACU,MAApB;AACA,IAAIC,QAAQ,GAAGD,MAAM,IAAIA,MAAM,CAACE,QAAhC;AACA,IAAIC,MAAM,GAAG,IAAIL,YAAY,CAACF,WAAW,GAAG,IAAf,CAAhB,KAAyC,CAACQ,QAA1C,CACX;AADW,GAEPH,QAAQ,IAAI,CAACT,KAAK,CAAC,YAAY;AAAEM,EAAAA,YAAY,CAACO,MAAM,CAACJ,QAAD,CAAP,CAAZ;AAAiC,CAAhD,CAFxB,C,CAIA;AACA;;AACAK,MAAM,CAACC,OAAP,GAAiBJ,MAAM,GAAG,SAASJ,UAAT,CAAoBS,MAApB,EAA4B;AACpD,MAAIC,aAAa,GAAGd,IAAI,CAACD,QAAQ,CAACc,MAAD,CAAT,CAAxB;AACA,MAAIE,MAAM,GAAGZ,YAAY,CAACW,aAAD,CAAzB;AACA,SAAOC,MAAM,KAAK,CAAX,IAAgBb,MAAM,CAACY,aAAD,EAAgB,CAAhB,CAAN,IAA4B,GAA5C,GAAkD,CAAC,CAAnD,GAAuDC,MAA9D;AACD,CAJsB,GAInBZ,YAJJ","sourcesContent":["var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar charAt = uncurryThis(''.charAt);\nvar n$ParseFloat = global.parseFloat;\nvar Symbol = global.Symbol;\nvar ITERATOR = Symbol && Symbol.iterator;\nvar FORCED = 1 / n$ParseFloat(whitespaces + '-0') !== -Infinity\n  // MS Edge 18- broken with boxed symbols\n  || (ITERATOR && !fails(function () { n$ParseFloat(Object(ITERATOR)); }));\n\n// `parseFloat` method\n// https://tc39.es/ecma262/#sec-parsefloat-string\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(toString(string));\n  var result = n$ParseFloat(trimmedString);\n  return result === 0 && charAt(trimmedString, 0) == '-' ? -0 : result;\n} : n$ParseFloat;\n"]},"metadata":{},"sourceType":"script"}