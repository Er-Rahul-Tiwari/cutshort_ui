{"ast":null,"code":"var _jsxFileName = \"/Users/rahultiwari/Desktop/cutShort/src/views/Routing/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    auth: {\n      isAuthenticated,\n      token\n    },\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (!isAuthenticated && token === null) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/app/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 18\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/rahultiwari/Desktop/cutShort/src/views/Routing/PrivateRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","PrivateRoute","component","Component","auth","isAuthenticated","token","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,YAAY,GAAG,QAIf;AAAA,MAJgB;AACpBC,IAAAA,SAAS,EAAEC,SADS;AAEpBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KAFc;AAGpB,OAAGC;AAHiB,GAIhB;AAEJ,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAI,CAACH,eAAD,IAAoBC,KAAK,KAAK,IAAlC,EAAwC;AACtC,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BAAO,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlBD;;KAAMP,Y;AAoBNA,YAAY,CAACQ,SAAb,GAAyB;AACvBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC;AADA,CAAzB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, token },\n  ...rest\n}) => {\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!isAuthenticated && token === null) {\n          return <Redirect to=\"/app/login\" />;\n        } else {\n          return <Component {...props} />;\n        }\n      }}\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}