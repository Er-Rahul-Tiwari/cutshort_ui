{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert, removeAlert } from \"./alert\";\nimport { setErrorsList } from \"./errors\";\nimport { LOADING_ON_AUTH_SUBMIT, LOGOUT, REMOVE_ERRORS, REMOVE_ALERT } from \"./types\";\nimport * as Constants from 'constants/index'; // Dispatch Loading\n\nexport const loadingOnSubmit = () => async dispatch => {\n  await dispatch({\n    type: LOADING_ON_AUTH_SUBMIT\n  });\n}; // SELF_AUTH API\n// export const selfAuth = () => async (dispatch) => {\n//   try {\n//     const { data } = await axios.get(`${Constants.API_URL}/user/self`, Constants.HEADER_OPTIONS);\n//     if (data.status === 200) {\n//       dispatch({\n//         type: SELF_LOADED,\n//         payload: data.data,\n//       });\n//     } else {\n//       window.localStorage.clear();\n//       dispatch({ type: LOGOUT });\n//     }\n//   } catch (err) {\n//     window.localStorage.clear();\n//     dispatch({ type: LOGOUT });\n//     return undefined;\n//   }\n// };\n// Redirect Login\n\nexport const redirect_step_second = history => async dispatch => {\n  dispatch({\n    type: REMOVE_ALERT\n  });\n  dispatch({\n    type: REMOVE_ERRORS\n  });\n  history.push(\"/app/login\");\n}; //Dispatch Confirm password error\n\nexport const setPasswordError = (msg, param) => async dispatch => {\n  dispatch(setErrorsList(msg, param));\n}; // Logout\n\nexport const logout = () => async dispatch => {\n  window.localStorage.clear();\n  dispatch({\n    type: LOGOUT\n  });\n  dispatch(removeAlert());\n};","map":{"version":3,"sources":["/Users/rahultiwari/Desktop/cutShort/src/actions/auth.js"],"names":["axios","setAlert","removeAlert","setErrorsList","LOADING_ON_AUTH_SUBMIT","LOGOUT","REMOVE_ERRORS","REMOVE_ALERT","Constants","loadingOnSubmit","dispatch","type","redirect_step_second","history","push","setPasswordError","msg","param","logout","window","localStorage","clear"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,SAAtC;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SACEC,sBADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,YAJF,QAKO,SALP;AAMA,OAAO,KAAKC,SAAZ,MAA2B,iBAA3B,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACvD,QAAMA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAd;AAED,CAHM,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,OAAO,MAAMQ,oBAAoB,GAAIC,OAAD,IAAa,MAAOH,QAAP,IAAoB;AACnEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAR;AACAG,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAO,EAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACD,CAJM,C,CAKP;;AACA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB,MAAOP,QAAP,IAAoB;AAClEA,EAAAA,QAAQ,CAACP,aAAa,CAACa,GAAD,EAAMC,KAAN,CAAd,CAAR;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMC,MAAM,GAAG,MAAM,MAAOR,QAAP,IAAoB;AAC9CS,EAAAA,MAAM,CAACC,YAAP,CAAoBC,KAApB;AACAX,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACAK,EAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACD,CAJM","sourcesContent":["import axios from \"axios\";\nimport { setAlert, removeAlert } from \"./alert\";\nimport { setErrorsList } from \"./errors\";\nimport {\n  LOADING_ON_AUTH_SUBMIT,\n  LOGOUT,\n  REMOVE_ERRORS,\n  REMOVE_ALERT,\n} from \"./types\";\nimport * as Constants from 'constants/index'\n\n// Dispatch Loading\nexport const loadingOnSubmit = () => async (dispatch) => {\n  await dispatch({ type: LOADING_ON_AUTH_SUBMIT });\n  \n};\n\n// SELF_AUTH API\n// export const selfAuth = () => async (dispatch) => {\n//   try {\n//     const { data } = await axios.get(`${Constants.API_URL}/user/self`, Constants.HEADER_OPTIONS);\n//     if (data.status === 200) {\n//       dispatch({\n//         type: SELF_LOADED,\n//         payload: data.data,\n//       });\n//     } else {\n//       window.localStorage.clear();\n//       dispatch({ type: LOGOUT });\n//     }\n//   } catch (err) {\n//     window.localStorage.clear();\n//     dispatch({ type: LOGOUT });\n//     return undefined;\n//   }\n// };\n\n\n// Redirect Login\nexport const redirect_step_second = (history) => async (dispatch) => {\n  dispatch({ type: REMOVE_ALERT });\n  dispatch({ type: REMOVE_ERRORS });\n  history.push(\"/app/login\");\n};\n//Dispatch Confirm password error\nexport const setPasswordError = (msg, param) => async (dispatch) => {\n  dispatch(setErrorsList(msg, param));\n};\n\n// Logout\nexport const logout = () => async (dispatch) => {\n  window.localStorage.clear();\n  dispatch({ type: LOGOUT });\n  dispatch(removeAlert());\n};\n"]},"metadata":{},"sourceType":"module"}