{"ast":null,"code":"var uncurryThis = require('../internals/function-uncurry-this');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar toString = require('../internals/to-string');\n\nvar quot = /\"/g;\nvar replace = uncurryThis(''.replace); // `CreateHTML` abstract operation\n// https://tc39.es/ecma262/#sec-createhtml\n\nmodule.exports = function (string, tag, attribute, value) {\n  var S = toString(requireObjectCoercible(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + replace(toString(value), quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};","map":{"version":3,"sources":["/Users/rahultiwari/Desktop/cutShort/node_modules/core-js/internals/create-html.js"],"names":["uncurryThis","require","requireObjectCoercible","toString","quot","replace","module","exports","string","tag","attribute","value","S","p1"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,uCAAD,CAApC;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AAEA,IAAIG,IAAI,GAAG,IAAX;AACA,IAAIC,OAAO,GAAGL,WAAW,CAAC,GAAGK,OAAJ,CAAzB,C,CAEA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyC;AACxD,MAAIC,CAAC,GAAGT,QAAQ,CAACD,sBAAsB,CAACM,MAAD,CAAvB,CAAhB;AACA,MAAIK,EAAE,GAAG,MAAMJ,GAAf;AACA,MAAIC,SAAS,KAAK,EAAlB,EAAsBG,EAAE,IAAI,MAAMH,SAAN,GAAkB,IAAlB,GAAyBL,OAAO,CAACF,QAAQ,CAACQ,KAAD,CAAT,EAAkBP,IAAlB,EAAwB,QAAxB,CAAhC,GAAoE,GAA1E;AACtB,SAAOS,EAAE,GAAG,GAAL,GAAWD,CAAX,GAAe,IAAf,GAAsBH,GAAtB,GAA4B,GAAnC;AACD,CALD","sourcesContent":["var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\n\nvar quot = /\"/g;\nvar replace = uncurryThis(''.replace);\n\n// `CreateHTML` abstract operation\n// https://tc39.es/ecma262/#sec-createhtml\nmodule.exports = function (string, tag, attribute, value) {\n  var S = toString(requireObjectCoercible(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + replace(toString(value), quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\n"]},"metadata":{},"sourceType":"script"}