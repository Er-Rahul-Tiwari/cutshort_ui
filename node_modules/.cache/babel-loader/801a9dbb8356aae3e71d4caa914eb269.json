{"ast":null,"code":"'use strict';\n\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar global = require('../internals/global');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar isForced = require('../internals/is-forced');\n\nvar redefine = require('../internals/redefine');\n\nvar hasOwn = require('../internals/has-own-property');\n\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar isSymbol = require('../internals/is-symbol');\n\nvar toPrimitive = require('../internals/to-primitive');\n\nvar fails = require('../internals/fails');\n\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar thisNumberValue = require('../internals/this-number-value');\n\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar arraySlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt); // `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\n\nvar toNumeric = function toNumeric(value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n}; // `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\n\n\nvar toNumber = function toNumber(argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');\n\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        case 66:\n        case 98:\n          radix = 2;\n          maxCode = 49;\n          break;\n        // fast equal of /^0b[01]+$/i\n\n        case 79:\n        case 111:\n          radix = 8;\n          maxCode = 55;\n          break;\n        // fast equal of /^0o[0-7]+$/i\n\n        default:\n          return +it;\n      }\n\n      digits = arraySlice(it, 2);\n      length = digits.length;\n\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index); // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n\n        if (code < 48 || code > maxCode) return NaN;\n      }\n\n      return parseInt(digits, radix);\n    }\n  }\n\n  return +it;\n}; // `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\n\n\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n    var dummy = this; // check on 1..constructor(foo) case\n\n    return isPrototypeOf(NumberPrototype, dummy) && fails(function () {\n      thisNumberValue(dummy);\n    }) ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;\n  };\n\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : ( // ES3:\n  'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' + // ES2015 (in case, if modules with ES2015 Number statics required before):\n  'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' + // ESNext\n  'fromString,range').split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(NativeNumber, key = keys[j]) && !hasOwn(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}","map":{"version":3,"sources":["/Users/rahultiwari/Desktop/cutShort/node_modules/core-js/modules/es.number.constructor.js"],"names":["DESCRIPTORS","require","global","uncurryThis","isForced","redefine","hasOwn","inheritIfRequired","isPrototypeOf","isSymbol","toPrimitive","fails","getOwnPropertyNames","f","getOwnPropertyDescriptor","defineProperty","thisNumberValue","trim","NUMBER","NativeNumber","NumberPrototype","prototype","TypeError","arraySlice","slice","charCodeAt","toNumeric","value","primValue","toNumber","argument","it","first","third","radix","maxCode","digits","length","index","code","NaN","parseInt","NumberWrapper","Number","n","arguments","dummy","Object","keys","split","j","key","constructor"],"mappings":"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","sourcesContent":["'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar hasOwn = require('../internals/has-own-property');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar isSymbol = require('../internals/is-symbol');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar thisNumberValue = require('../internals/this-number-value');\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar arraySlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt);\n\n// `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\nvar toNumeric = function (value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n};\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = arraySlice(it, 2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n    var dummy = this;\n    // check on 1..constructor(foo) case\n    return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); })\n      ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(NativeNumber, key = keys[j]) && !hasOwn(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n"]},"metadata":{},"sourceType":"script"}