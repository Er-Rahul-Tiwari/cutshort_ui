{"ast":null,"code":"'use strict';\n\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');\n\nvar fails = require('../internals/fails');\n\nvar arraySlice = require('../internals/array-slice');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar FORCED = fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  new Int8Array(1).slice();\n}); // `%TypedArray%.prototype.slice` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice\n\nexportTypedArrayMethod('slice', function slice(start, end) {\n  var list = arraySlice(aTypedArray(this), start, end);\n  var C = typedArraySpeciesConstructor(this);\n  var index = 0;\n  var length = list.length;\n  var result = new C(length);\n\n  while (length > index) {\n    result[index] = list[index++];\n  }\n\n  return result;\n}, FORCED);","map":{"version":3,"sources":["/Users/rahultiwari/Desktop/cutShort/node_modules/core-js/modules/es.typed-array.slice.js"],"names":["ArrayBufferViewCore","require","typedArraySpeciesConstructor","fails","arraySlice","aTypedArray","exportTypedArrayMethod","FORCED","Int8Array","slice","start","end","list","C","index","length","result"],"mappings":"AAAA;;AACA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAIC,4BAA4B,GAAGD,OAAO,CAAC,8CAAD,CAA1C;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,oBAAD,CAAnB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,0BAAD,CAAxB;;AAEA,IAAII,WAAW,GAAGL,mBAAmB,CAACK,WAAtC;AACA,IAAIC,sBAAsB,GAAGN,mBAAmB,CAACM,sBAAjD;AAEA,IAAIC,MAAM,GAAGJ,KAAK,CAAC,YAAY;AAC7B;AACA,MAAIK,SAAJ,CAAc,CAAd,EAAiBC,KAAjB;AACD,CAHiB,CAAlB,C,CAKA;AACA;;AACAH,sBAAsB,CAAC,OAAD,EAAU,SAASG,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2B;AACzD,MAAIC,IAAI,GAAGR,UAAU,CAACC,WAAW,CAAC,IAAD,CAAZ,EAAoBK,KAApB,EAA2BC,GAA3B,CAArB;AACA,MAAIE,CAAC,GAAGX,4BAA4B,CAAC,IAAD,CAApC;AACA,MAAIY,KAAK,GAAG,CAAZ;AACA,MAAIC,MAAM,GAAGH,IAAI,CAACG,MAAlB;AACA,MAAIC,MAAM,GAAG,IAAIH,CAAJ,CAAME,MAAN,CAAb;;AACA,SAAOA,MAAM,GAAGD,KAAhB;AAAuBE,IAAAA,MAAM,CAACF,KAAD,CAAN,GAAgBF,IAAI,CAACE,KAAK,EAAN,CAApB;AAAvB;;AACA,SAAOE,MAAP;AACD,CARqB,EAQnBT,MARmB,CAAtB","sourcesContent":["'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');\nvar fails = require('../internals/fails');\nvar arraySlice = require('../internals/array-slice');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar FORCED = fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  new Int8Array(1).slice();\n});\n\n// `%TypedArray%.prototype.slice` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice\nexportTypedArrayMethod('slice', function slice(start, end) {\n  var list = arraySlice(aTypedArray(this), start, end);\n  var C = typedArraySpeciesConstructor(this);\n  var index = 0;\n  var length = list.length;\n  var result = new C(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n}, FORCED);\n"]},"metadata":{},"sourceType":"script"}