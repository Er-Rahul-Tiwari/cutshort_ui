{"ast":null,"code":"'use strict';\n\nvar global = require('../internals/global');\n\nvar call = require('../internals/function-call');\n\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar toOffset = require('../internals/to-offset');\n\nvar toIndexedObject = require('../internals/to-object');\n\nvar fails = require('../internals/fails');\n\nvar RangeError = global.RangeError;\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar $set = Int8ArrayPrototype && Int8ArrayPrototype.set;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS = !fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  var array = new Uint8ClampedArray(2);\n  call($set, array, {\n    length: 1,\n    0: 3\n  }, 1);\n  return array[1] !== 3;\n}); // https://bugs.chromium.org/p/v8/issues/detail?id=11294 and other\n\nvar TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS && ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS && fails(function () {\n  var array = new Int8Array(2);\n  array.set(1);\n  array.set('2', 1);\n  return array[0] !== 0 || array[1] !== 2;\n}); // `%TypedArray%.prototype.set` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set\n\nexportTypedArrayMethod('set', function set(arrayLike\n/* , offset */\n) {\n  aTypedArray(this);\n  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);\n  var src = toIndexedObject(arrayLike);\n  if (WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS) return call($set, this, src, offset);\n  var length = this.length;\n  var len = lengthOfArrayLike(src);\n  var index = 0;\n  if (len + offset > length) throw RangeError('Wrong length');\n\n  while (index < len) {\n    this[offset + index] = src[index++];\n  }\n}, !WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);","map":{"version":3,"sources":["/Users/rahultiwari/Desktop/cutShort/node_modules/core-js/modules/es.typed-array.set.js"],"names":["global","require","call","ArrayBufferViewCore","lengthOfArrayLike","toOffset","toIndexedObject","fails","RangeError","Int8Array","Int8ArrayPrototype","prototype","$set","set","aTypedArray","exportTypedArrayMethod","WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS","array","Uint8ClampedArray","length","TO_OBJECT_BUG","NATIVE_ARRAY_BUFFER_VIEWS","arrayLike","offset","arguments","undefined","src","len","index"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,mCAAD,CAA/B;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIK,eAAe,GAAGL,OAAO,CAAC,wBAAD,CAA7B;;AACA,IAAIM,KAAK,GAAGN,OAAO,CAAC,oBAAD,CAAnB;;AAEA,IAAIO,UAAU,GAAGR,MAAM,CAACQ,UAAxB;AACA,IAAIC,SAAS,GAAGT,MAAM,CAACS,SAAvB;AACA,IAAIC,kBAAkB,GAAGD,SAAS,IAAIA,SAAS,CAACE,SAAhD;AACA,IAAIC,IAAI,GAAGF,kBAAkB,IAAIA,kBAAkB,CAACG,GAApD;AACA,IAAIC,WAAW,GAAGX,mBAAmB,CAACW,WAAtC;AACA,IAAIC,sBAAsB,GAAGZ,mBAAmB,CAACY,sBAAjD;AAEA,IAAIC,6CAA6C,GAAG,CAACT,KAAK,CAAC,YAAY;AACrE;AACA,MAAIU,KAAK,GAAG,IAAIC,iBAAJ,CAAsB,CAAtB,CAAZ;AACAhB,EAAAA,IAAI,CAACU,IAAD,EAAOK,KAAP,EAAc;AAAEE,IAAAA,MAAM,EAAE,CAAV;AAAa,OAAG;AAAhB,GAAd,EAAmC,CAAnC,CAAJ;AACA,SAAOF,KAAK,CAAC,CAAD,CAAL,KAAa,CAApB;AACD,CALyD,CAA1D,C,CAOA;;AACA,IAAIG,aAAa,GAAGJ,6CAA6C,IAAIb,mBAAmB,CAACkB,yBAArE,IAAkGd,KAAK,CAAC,YAAY;AACtI,MAAIU,KAAK,GAAG,IAAIR,SAAJ,CAAc,CAAd,CAAZ;AACAQ,EAAAA,KAAK,CAACJ,GAAN,CAAU,CAAV;AACAI,EAAAA,KAAK,CAACJ,GAAN,CAAU,GAAV,EAAe,CAAf;AACA,SAAOI,KAAK,CAAC,CAAD,CAAL,KAAa,CAAb,IAAkBA,KAAK,CAAC,CAAD,CAAL,KAAa,CAAtC;AACD,CAL0H,CAA3H,C,CAOA;AACA;;AACAF,sBAAsB,CAAC,KAAD,EAAQ,SAASF,GAAT,CAAaS;AAAU;AAAvB,EAAuC;AACnER,EAAAA,WAAW,CAAC,IAAD,CAAX;AACA,MAAIS,MAAM,GAAGlB,QAAQ,CAACmB,SAAS,CAACL,MAAV,GAAmB,CAAnB,GAAuBK,SAAS,CAAC,CAAD,CAAhC,GAAsCC,SAAvC,EAAkD,CAAlD,CAArB;AACA,MAAIC,GAAG,GAAGpB,eAAe,CAACgB,SAAD,CAAzB;AACA,MAAIN,6CAAJ,EAAmD,OAAOd,IAAI,CAACU,IAAD,EAAO,IAAP,EAAac,GAAb,EAAkBH,MAAlB,CAAX;AACnD,MAAIJ,MAAM,GAAG,KAAKA,MAAlB;AACA,MAAIQ,GAAG,GAAGvB,iBAAiB,CAACsB,GAAD,CAA3B;AACA,MAAIE,KAAK,GAAG,CAAZ;AACA,MAAID,GAAG,GAAGJ,MAAN,GAAeJ,MAAnB,EAA2B,MAAMX,UAAU,CAAC,cAAD,CAAhB;;AAC3B,SAAOoB,KAAK,GAAGD,GAAf;AAAoB,SAAKJ,MAAM,GAAGK,KAAd,IAAuBF,GAAG,CAACE,KAAK,EAAN,CAA1B;AAApB;AACD,CAVqB,EAUnB,CAACZ,6CAAD,IAAkDI,aAV/B,CAAtB","sourcesContent":["'use strict';\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toOffset = require('../internals/to-offset');\nvar toIndexedObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\n\nvar RangeError = global.RangeError;\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar $set = Int8ArrayPrototype && Int8ArrayPrototype.set;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS = !fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  var array = new Uint8ClampedArray(2);\n  call($set, array, { length: 1, 0: 3 }, 1);\n  return array[1] !== 3;\n});\n\n// https://bugs.chromium.org/p/v8/issues/detail?id=11294 and other\nvar TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS && ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS && fails(function () {\n  var array = new Int8Array(2);\n  array.set(1);\n  array.set('2', 1);\n  return array[0] !== 0 || array[1] !== 2;\n});\n\n// `%TypedArray%.prototype.set` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set\nexportTypedArrayMethod('set', function set(arrayLike /* , offset */) {\n  aTypedArray(this);\n  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);\n  var src = toIndexedObject(arrayLike);\n  if (WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS) return call($set, this, src, offset);\n  var length = this.length;\n  var len = lengthOfArrayLike(src);\n  var index = 0;\n  if (len + offset > length) throw RangeError('Wrong length');\n  while (index < len) this[offset + index] = src[index++];\n}, !WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);\n"]},"metadata":{},"sourceType":"script"}