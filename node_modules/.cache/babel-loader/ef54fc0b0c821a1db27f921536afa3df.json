{"ast":null,"code":"import _objectWithoutProperties from\"/Users/rahultiwari/Desktop/cutShort/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"alerts\"];import React,{useEffect}from\"react\";import PropTypes from\"prop-types\";import{connect}from\"react-redux\";import{Route,Switch,withRouter}from\"react-router-dom\";import UserComponentRoutes from\"views/Routing/ComponentRoutes\";import\"react-notifications/lib/notifications.css\";import{NotificationContainer,NotificationManager}from\"react-notifications\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Index=function Index(_ref){var alerts=_ref.alerts,props=_objectWithoutProperties(_ref,_excluded);var createNotification=function createNotification(type,message){switch(type){case\"info\":return NotificationManager.info(message,\"\",500);case\"success\":return NotificationManager.success(message,\"\",500);case\"warning\":return NotificationManager.warning(message,\"\",500);case\"danger\":return NotificationManager.error(message,\"\",500);default:break;}};useEffect(function(){alerts!==null&&alerts.length>0&&alerts.map(function(alert,idx){createNotification(\"\".concat(alert.alertType),alert.msg);return true;});},[alerts]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NotificationContainer,{}),/*#__PURE__*/_jsx(Switch,{children:UserComponentRoutes.map(function(route,idx){return route.component?/*#__PURE__*/_jsx(Route,{path:route.path,exact:route.exact,name:route.name,component:route.component},idx):null;})})]});};Index.prototype={alerts:PropTypes.array.isRequired};var mapStateToProps=function mapStateToProps(state){return{alerts:state.alert};};export default connect(mapStateToProps)(withRouter(Index));","map":{"version":3,"sources":["/Users/rahultiwari/Desktop/cutShort/src/views/Components/index.js"],"names":["React","useEffect","PropTypes","connect","Route","Switch","withRouter","UserComponentRoutes","NotificationContainer","NotificationManager","Index","alerts","props","createNotification","type","message","info","success","warning","error","length","map","alert","idx","alertType","msg","route","component","path","exact","name","prototype","array","isRequired","mapStateToProps","state"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAuBC,UAAvB,KAAyC,kBAAzC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,+BAAhC,CAEA,MAAO,2CAAP,CACA,OACEC,qBADF,CAEEC,mBAFF,KAGO,qBAHP,C,6IAKA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAA0B,IAAvBC,CAAAA,MAAuB,MAAvBA,MAAuB,CAAZC,KAAY,0CAEtC,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,IAAD,CAAOC,OAAP,CAAmB,CAC5C,OAAQD,IAAR,EACE,IAAK,MAAL,CACE,MAAOL,CAAAA,mBAAmB,CAACO,IAApB,CAAyBD,OAAzB,CAAkC,EAAlC,CAAsC,GAAtC,CAAP,CACF,IAAK,SAAL,CACE,MAAON,CAAAA,mBAAmB,CAACQ,OAApB,CAA4BF,OAA5B,CAAqC,EAArC,CAAyC,GAAzC,CAAP,CACF,IAAK,SAAL,CACE,MAAON,CAAAA,mBAAmB,CAACS,OAApB,CAA4BH,OAA5B,CAAqC,EAArC,CAAyC,GAAzC,CAAP,CACF,IAAK,QAAL,CACE,MAAON,CAAAA,mBAAmB,CAACU,KAApB,CAA0BJ,OAA1B,CAAmC,EAAnC,CAAuC,GAAvC,CAAP,CACF,QACE,MAVJ,CAYD,CAbD,CAeAd,SAAS,CAAC,UAAM,CACdU,MAAM,GAAK,IAAX,EACEA,MAAM,CAACS,MAAP,CAAgB,CADlB,EAEET,MAAM,CAACU,GAAP,CAAW,SAACC,KAAD,CAAQC,GAAR,CAAgB,CACzBV,kBAAkB,WAAIS,KAAK,CAACE,SAAV,EAAuBF,KAAK,CAACG,GAA7B,CAAlB,CACA,MAAO,KAAP,CACD,CAHD,CAFF,CAMD,CAPQ,CAON,CAACd,MAAD,CAPM,CAAT,CASA,mBACE,wCACI,KAAC,qBAAD,IADJ,cAEI,KAAC,MAAD,WACGJ,mBAAmB,CAACc,GAApB,CAAwB,SAACK,KAAD,CAAQH,GAAR,CAAgB,CACvC,MAAOG,CAAAA,KAAK,CAACC,SAAN,cACL,KAAC,KAAD,EAEE,IAAI,CAAED,KAAK,CAACE,IAFd,CAGE,KAAK,CAAEF,KAAK,CAACG,KAHf,CAIE,IAAI,CAAEH,KAAK,CAACI,IAJd,CAKE,SAAS,CAAEJ,KAAK,CAACC,SALnB,EACOJ,GADP,CADK,CAQH,IARJ,CASD,CAVA,CADH,EAFJ,GADF,CAkBD,CA5CD,CA8CAb,KAAK,CAACqB,SAAN,CAAkB,CAChBpB,MAAM,CAAET,SAAS,CAAC8B,KAAV,CAAgBC,UADR,CAAlB,CAIA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCxB,MAAM,CAAEwB,KAAK,CAACb,KADoB,CAAZ,EAAxB,CAIA,cAAenB,CAAAA,OAAO,CAAC+B,eAAD,CAAP,CAAyB5B,UAAU,CAACI,KAAD,CAAnC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch,withRouter } from \"react-router-dom\";\nimport UserComponentRoutes from \"views/Routing/ComponentRoutes\";\n\nimport \"react-notifications/lib/notifications.css\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nconst Index = ({ alerts, ...props }) => {\n\n  const createNotification = (type, message) => {\n    switch (type) {\n      case \"info\":\n        return NotificationManager.info(message, \"\", 500);\n      case \"success\":\n        return NotificationManager.success(message, \"\", 500);\n      case \"warning\":\n        return NotificationManager.warning(message, \"\", 500);\n      case \"danger\":\n        return NotificationManager.error(message, \"\", 500);\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    alerts !== null &&\n      alerts.length > 0 &&\n      alerts.map((alert, idx) => {\n        createNotification(`${alert.alertType}`, alert.msg);\n        return true;\n      });\n  }, [alerts]);\n  \n  return (\n    <>\n        <NotificationContainer />\n        <Switch>\n          {UserComponentRoutes.map((route, idx) => {\n            return route.component ? (\n              <Route\n                key={idx}\n                path={route.path}\n                exact={route.exact}\n                name={route.name}\n                component={route.component}\n              />\n            ) : null;\n          })}\n        </Switch>\n    </>\n  );\n};\n\nIndex.prototype = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(withRouter(Index));\n"]},"metadata":{},"sourceType":"module"}