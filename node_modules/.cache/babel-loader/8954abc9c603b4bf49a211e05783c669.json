{"ast":null,"code":"// IEEE754 conversions based on https://github.com/feross/ieee754\nvar global = require('../internals/global');\n\nvar Array = global.Array;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nvar pack = function pack(number, mantissaLength, bytes) {\n  var buffer = Array(bytes);\n  var exponentLength = bytes * 8 - mantissaLength - 1;\n  var eMax = (1 << exponentLength) - 1;\n  var eBias = eMax >> 1;\n  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;\n  var index = 0;\n  var exponent, mantissa, c;\n  number = abs(number); // eslint-disable-next-line no-self-compare -- NaN check\n\n  if (number != number || number === Infinity) {\n    // eslint-disable-next-line no-self-compare -- NaN check\n    mantissa = number != number ? 1 : 0;\n    exponent = eMax;\n  } else {\n    exponent = floor(log(number) / LN2);\n    c = pow(2, -exponent);\n\n    if (number * c < 1) {\n      exponent--;\n      c *= 2;\n    }\n\n    if (exponent + eBias >= 1) {\n      number += rt / c;\n    } else {\n      number += rt * pow(2, 1 - eBias);\n    }\n\n    if (number * c >= 2) {\n      exponent++;\n      c /= 2;\n    }\n\n    if (exponent + eBias >= eMax) {\n      mantissa = 0;\n      exponent = eMax;\n    } else if (exponent + eBias >= 1) {\n      mantissa = (number * c - 1) * pow(2, mantissaLength);\n      exponent = exponent + eBias;\n    } else {\n      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);\n      exponent = 0;\n    }\n  }\n\n  while (mantissaLength >= 8) {\n    buffer[index++] = mantissa & 255;\n    mantissa /= 256;\n    mantissaLength -= 8;\n  }\n\n  exponent = exponent << mantissaLength | mantissa;\n  exponentLength += mantissaLength;\n\n  while (exponentLength > 0) {\n    buffer[index++] = exponent & 255;\n    exponent /= 256;\n    exponentLength -= 8;\n  }\n\n  buffer[--index] |= sign * 128;\n  return buffer;\n};\n\nvar unpack = function unpack(buffer, mantissaLength) {\n  var bytes = buffer.length;\n  var exponentLength = bytes * 8 - mantissaLength - 1;\n  var eMax = (1 << exponentLength) - 1;\n  var eBias = eMax >> 1;\n  var nBits = exponentLength - 7;\n  var index = bytes - 1;\n  var sign = buffer[index--];\n  var exponent = sign & 127;\n  var mantissa;\n  sign >>= 7;\n\n  while (nBits > 0) {\n    exponent = exponent * 256 + buffer[index--];\n    nBits -= 8;\n  }\n\n  mantissa = exponent & (1 << -nBits) - 1;\n  exponent >>= -nBits;\n  nBits += mantissaLength;\n\n  while (nBits > 0) {\n    mantissa = mantissa * 256 + buffer[index--];\n    nBits -= 8;\n  }\n\n  if (exponent === 0) {\n    exponent = 1 - eBias;\n  } else if (exponent === eMax) {\n    return mantissa ? NaN : sign ? -Infinity : Infinity;\n  } else {\n    mantissa = mantissa + pow(2, mantissaLength);\n    exponent = exponent - eBias;\n  }\n\n  return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);\n};\n\nmodule.exports = {\n  pack: pack,\n  unpack: unpack\n};","map":{"version":3,"sources":["/Users/rahultiwari/Desktop/cutShort/node_modules/core-js/internals/ieee754.js"],"names":["global","require","Array","abs","Math","pow","floor","log","LN2","pack","number","mantissaLength","bytes","buffer","exponentLength","eMax","eBias","rt","sign","index","exponent","mantissa","c","Infinity","unpack","length","nBits","NaN","module","exports"],"mappings":"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","sourcesContent":["// IEEE754 conversions based on https://github.com/feross/ieee754\nvar global = require('../internals/global');\n\nvar Array = global.Array;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nvar pack = function (number, mantissaLength, bytes) {\n  var buffer = Array(bytes);\n  var exponentLength = bytes * 8 - mantissaLength - 1;\n  var eMax = (1 << exponentLength) - 1;\n  var eBias = eMax >> 1;\n  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;\n  var index = 0;\n  var exponent, mantissa, c;\n  number = abs(number);\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (number != number || number === Infinity) {\n    // eslint-disable-next-line no-self-compare -- NaN check\n    mantissa = number != number ? 1 : 0;\n    exponent = eMax;\n  } else {\n    exponent = floor(log(number) / LN2);\n    c = pow(2, -exponent);\n    if (number * c < 1) {\n      exponent--;\n      c *= 2;\n    }\n    if (exponent + eBias >= 1) {\n      number += rt / c;\n    } else {\n      number += rt * pow(2, 1 - eBias);\n    }\n    if (number * c >= 2) {\n      exponent++;\n      c /= 2;\n    }\n    if (exponent + eBias >= eMax) {\n      mantissa = 0;\n      exponent = eMax;\n    } else if (exponent + eBias >= 1) {\n      mantissa = (number * c - 1) * pow(2, mantissaLength);\n      exponent = exponent + eBias;\n    } else {\n      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);\n      exponent = 0;\n    }\n  }\n  while (mantissaLength >= 8) {\n    buffer[index++] = mantissa & 255;\n    mantissa /= 256;\n    mantissaLength -= 8;\n  }\n  exponent = exponent << mantissaLength | mantissa;\n  exponentLength += mantissaLength;\n  while (exponentLength > 0) {\n    buffer[index++] = exponent & 255;\n    exponent /= 256;\n    exponentLength -= 8;\n  }\n  buffer[--index] |= sign * 128;\n  return buffer;\n};\n\nvar unpack = function (buffer, mantissaLength) {\n  var bytes = buffer.length;\n  var exponentLength = bytes * 8 - mantissaLength - 1;\n  var eMax = (1 << exponentLength) - 1;\n  var eBias = eMax >> 1;\n  var nBits = exponentLength - 7;\n  var index = bytes - 1;\n  var sign = buffer[index--];\n  var exponent = sign & 127;\n  var mantissa;\n  sign >>= 7;\n  while (nBits > 0) {\n    exponent = exponent * 256 + buffer[index--];\n    nBits -= 8;\n  }\n  mantissa = exponent & (1 << -nBits) - 1;\n  exponent >>= -nBits;\n  nBits += mantissaLength;\n  while (nBits > 0) {\n    mantissa = mantissa * 256 + buffer[index--];\n    nBits -= 8;\n  }\n  if (exponent === 0) {\n    exponent = 1 - eBias;\n  } else if (exponent === eMax) {\n    return mantissa ? NaN : sign ? -Infinity : Infinity;\n  } else {\n    mantissa = mantissa + pow(2, mantissaLength);\n    exponent = exponent - eBias;\n  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);\n};\n\nmodule.exports = {\n  pack: pack,\n  unpack: unpack\n};\n"]},"metadata":{},"sourceType":"script"}