{"ast":null,"code":"var _jsxFileName = \"/Users/rahultiwari/Desktop/ctsh/src/views/Routing/PublicRoute.js\";\nimport React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicRoute = _ref => {\n  let {\n    history,\n    component: Component,\n    auth: {\n      isAuthenticated,\n      loading,\n      token\n    },\n    restricted,\n    ...rest\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    _jsxDEV(Route, { ...rest,\n      render: props => {\n        // CONDITION ACCORDING YOUR NEED\n        // if (!isAuthenticated && !loading && !restricted) {\n        //   return <Component {...props} />;\n        // } else {\n        //   if (token !== null) {\n        //     // ROUTE WHERE DO YOU WANT TO REDIRECT\n        //     return <Redirect to=\"/app/\" />;\n        //   }\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 18\n        }, this); // }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = PublicRoute;\nPublicRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(PublicRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/Users/rahultiwari/Desktop/ctsh/src/views/Routing/PublicRoute.js"],"names":["React","useEffect","Route","Redirect","PropTypes","connect","PublicRoute","history","component","Component","auth","isAuthenticated","loading","token","restricted","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,WAAW,GAAG,QAMd;AAAA,MANe;AACnBC,IAAAA,OADmB;AAEnBC,IAAAA,SAAS,EAAEC,SAFQ;AAGnBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA,OAAnB;AAA4BC,MAAAA;AAA5B,KAHa;AAInBC,IAAAA,UAJmB;AAKnB,OAAGC;AALgB,GAMf;AAEJ;AAAA;AACE;AACA;AACA,YAAC,KAAD,OACMA,IADN;AAEE,MAAA,MAAM,EAAGC,KAAD,IAAW;AAEjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,4BAAO,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP,CAXe,CAYjB;AACD;AAfH;AAAA;AAAA;AAAA;AAAA;AAHF;AAqBD,CA7BD;;KAAMV,W;AA+BNA,WAAW,CAACW,SAAZ,GAAwB;AACtBP,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAAV,CAAiBC;AADD,CAAxB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADsB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACe,eAAD,EAAkB,EAAlB,CAAP,CACZd,WADY,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst PublicRoute = ({\n  history,\n  component: Component,\n  auth: { isAuthenticated, loading, token, },\n  restricted,\n  ...rest\n}) => {\n\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    <Route\n      {...rest}\n      render={(props) => {\n\n        // CONDITION ACCORDING YOUR NEED\n\n        // if (!isAuthenticated && !loading && !restricted) {\n        //   return <Component {...props} />;\n        // } else {\n        //   if (token !== null) {\n        //     // ROUTE WHERE DO YOU WANT TO REDIRECT\n        //     return <Redirect to=\"/app/\" />;\n        //   }\n          return <Component {...props} />;\n        // }\n      }}\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {\n})(PublicRoute);\n"]},"metadata":{},"sourceType":"module"}